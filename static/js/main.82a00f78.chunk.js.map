{"version":3,"sources":["game/scene/GameScene.ts","web/component/GameComponent.tsx","App.js","reportWebVitals.js","index.js"],"names":["GameScene","text","this","add","backgroundColor","color","fontSize","setInteractive","useHandCursor","on","Phaser","Scene","GameComponent","config","type","AUTO","width","props","gameWidth","height","gameHeight","parent","scene","Game","id","Component","App","className","numberOfPlayers","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAEqBA,E,4JACjB,WACI,IAAMC,EAAOC,KAAKC,IAAIF,KAAK,IAAK,IAAK,YAAa,CAC9CG,gBAAiB,QACjBC,MAAO,OACPC,SAAU,OAGdL,EAAKM,eAAe,CAAEC,eAAe,IAErCP,EAAKQ,GAAG,aAAa,mB,UAVUC,EAAOC,O,OCYzBC,E,wKAEjB,c,+BAIA,WACI,IAAMC,EAAgC,CAClCC,KAAMJ,OAAOK,KACbC,MAAOd,KAAKe,MAAMC,UAClBC,OAAQjB,KAAKe,MAAMG,WACnBC,OAAQ,gBACRC,MAAO,CAACtB,IAGZ,IAAIuB,OAAKV,K,mCAGb,WACI,OAAO,I,oBAIX,WACI,OAAO,qBAAKW,GAAG,oB,GAxBoBC,aCQ5BC,MAnBf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACI,qBAAKA,UAAU,YAAf,SACI,mBAAGA,UAAU,oBAAb,uBAEJ,8BACI,mBAAGA,UAAU,cAAb,2DAGJ,8BACI,cAAC,EAAD,CAAeC,gBAAiB,EAAGV,UAAW,IAAKE,WAAY,cCH9DS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.82a00f78.chunk.js","sourcesContent":["import Phaser from \"phaser\";\n\nexport default class GameScene extends Phaser.Scene {\n    create() {\n        const text = this.add.text(250, 250, 'Toggle UI', {\n            backgroundColor: 'white',\n            color: 'blue',\n            fontSize: \"48\"\n        })\n\n        text.setInteractive({ useHandCursor: true })\n\n        text.on('pointerup', () => {})\n    }\n}","import { Game, Types } from 'phaser';\nimport {Component} from \"react\";\nimport GameScene from \"../../game/scene/GameScene\";\n\ntype GameProperties = {\n    numberOfPlayers: number,\n    gameWidth: number,\n    gameHeight: number\n}\n\ntype GameState = {\n    numberOfPlayers: Number\n}\n\nexport default class GameComponent extends Component<GameProperties, GameState> {\n\n    componentWillMount() {\n        //init state\n    }\n\n    componentDidMount() {\n        const config: Types.Core.GameConfig = {\n            type: Phaser.AUTO,\n            width: this.props.gameWidth,\n            height: this.props.gameHeight,\n            parent: 'LineTowerWars',\n            scene: [GameScene]\n        }\n\n        new Game(config)\n    }\n\n    shouldComponentUpdate() {\n        return false\n    }\n\n    // render will know everything!\n    render() {\n        return <div id=\"phaser-game\" />\n    }\n}","import './App.scss';\nimport GameComponent from \"./web/component/GameComponent\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n          <div className=\"col-md-12\">\n              <p className=\"title text-center\">Welcome</p>\n          </div>\n          <div>\n              <p className=\"text-center\">still nothing there, we are building stuff!</p>\n          </div>\n\n          <div>\n              <GameComponent numberOfPlayers={2} gameWidth={500} gameHeight={500}/>\n          </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}